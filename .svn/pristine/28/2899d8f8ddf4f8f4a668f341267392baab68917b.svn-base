package com.autouploader;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.Properties;
import javafx.application.Application;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.geometry.Rectangle2D;
import javafx.scene.Node;
import javafx.scene.Scene;
import javafx.scene.control.Alert;
import javafx.scene.control.Button;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Hyperlink;
import javafx.scene.control.Label;
import javafx.scene.control.PasswordField;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.shape.Rectangle;
import javafx.stage.Screen;
import javafx.stage.Stage;
public class Login extends Application
{
private ComboBox<String> siteComboBox;
//private SearchableComboBox<T> siteComboBox;
private Button submitButton;

private VBox root;
private Button loginButton;
private Hyperlink forgetPasswordLink;
private TextField userNameField;
private PasswordField passwordField;	
public Properties propertyForSiteComboBox = new Properties();





	public static void main(String[] args) {
		launch(args);
	}

	@Override
	public void start(Stage primaryStage) throws Exception {
        // Create a StackPane to enclose the content
        StackPane stackPane = new StackPane();
        // Create a Rectangle as the background
        Rectangle background = new Rectangle(400, 400); // Set your desired dimensions
        background.setFill(Color.WHITE);
        root = new VBox(22);
        ImageView eyepacslogo = new ImageView(new Image(new FileInputStream("resources/images/eyepacslogo.png.png")));
        eyepacslogo.setFitWidth(140);
        eyepacslogo.setFitHeight(50);
        root.getChildren().add(eyepacslogo);

     // Create the username field with icon
        HBox usernameHBox = new HBox(12);
        usernameHBox.setPadding(new Insets(0,0,0,505));
        ImageView userIcon = new ImageView(new Image(new FileInputStream("resources/images/user.png.png")));
        userIcon.setFitHeight(20);
        userIcon.setFitWidth(20);
        userNameField = new TextField();
        userNameField.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");
        userNameField.setPromptText("Username");
        ObservableList<Node> children = usernameHBox.getChildren();
        children.addAll(userIcon,userNameField );
        root.getChildren().add(usernameHBox);
        // Create the password field with icon
        HBox passwordHBox = new HBox(10);
       // passwordHBox.setAlignment(Pos.CENTER);
        passwordHBox.setPadding(new Insets(0,0,0,505));

        ImageView passwordIcon = new ImageView(new Image(new FileInputStream("resources/images/pass-icon.png.jpg")));
        passwordIcon.setFitWidth(20); // Set your desired width
        passwordIcon.setFitHeight(20); // Set your desired height
        passwordField = new PasswordField();
        passwordField.setPromptText("Password");
        passwordField.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");

        passwordHBox.getChildren().addAll(passwordIcon,passwordField);
        root.getChildren().add(passwordHBox);



         loginButton = new Button("Login");
        loginButton.setPrefSize(124,25);
        loginButton.setStyle("-fx-background-color: #FFA500; -fx-text-fill: white;"); // Orange color
        
        root.getChildren().add(loginButton);
        
        loginButton.setOnAction(event -> {
			try {
				handleLogin(userNameField.getText(), passwordField.getText(), primaryStage);
			} catch (IOException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		});
       forgetPasswordLink = new Hyperlink("Forgot your password ?");
        forgetPasswordLink.setStyle("-fx-underline: true;");
        root.getChildren().add(forgetPasswordLink);
        stackPane.getChildren().addAll(background, root); // Add the Rectangle and VBox to the StackPane
        //positionling on top from the vertical and horizom
        root.setAlignment(Pos.CENTER);


        // Get the screen bounds
        Rectangle2D screenBounds = Screen.getPrimary().getVisualBounds();
        // Calculate the width and height as 90% of the screen size
        double width = screenBounds.getWidth() * 0.99;
        double height = screenBounds.getHeight() * 0.99;
        // Set up the scene
        Scene scene = new Scene(stackPane, width, height);
//        scene.getStylesheets().add(getClass().getResource("styles.css").toExternalForm());
        primaryStage.setScene(scene);
       // primaryStage.setFullScreen(true);
        

        primaryStage.show();// show the stage

    }
/***
 * 
 * @param s1
 * @param userPassword
 * @param primaryStage
 * @throws IOException
 * handling the login and creating the site section
 */
    public void handleLogin(String s1, String userPassword, Stage primaryStage) throws IOException {
        if (("Dev Kumar".equalsIgnoreCase(s1) && ("123".equals(userPassword))) || ("Krishna Kumar".equalsIgnoreCase(s1) && ("123".equals(userPassword)))) {
        	  // Disable username and password fields
            userNameField.setDisable(true);
            passwordField.setDisable(true);
        	 root.getChildren().removeAll(loginButton,forgetPasswordLink);
              VBox vbox=createSiteSection(primaryStage,s1);
              root.getChildren().add(vbox);
              
           
        } else {
            Alert alert=new Alert(Alert.AlertType.ERROR);
            alert.setTitle("Login Error");
            alert.setHeaderText(null);
            alert.setContentText("Invalid username or password");
            alert.showAndWait();
        }


	}

    /**
     * 
     * @param stage
     * @param s1
     * @return vbox
     * 
     * creating the site section if user enter the correct credentials
     */
    private VBox createSiteSection(Stage stage,String s1)
    {
//    	VBox vboxSiteAndSubmitButton=new VBox(20);
//    	vboxSiteAndSubmitButton.setAlignment(Pos.CENTER);
//   siteComboBox=new ComboBox<String>();
//   siteComboBox.setPromptText("-- Select site -- ");
//   siteComboBox.getItems().addAll("site1","site2","site3","site4");
//   submitButton=new Button("Submit");
//   siteComboBox.setPrefSize(125, 25);
    	VBox vboxForsiteAndButton=new VBox(10);
    	VBox vboxForSiteAndlabel = new VBox(10);
    	//vboxForSiteAndlabel.setPrefSize(220, 30);
    //	vboxForsiteAndButton.setAlignment(Pos.CENTER);
    	vboxForSiteAndlabel.setAlignment(Pos.CENTER);
        Label siteLabel=new Label("-- Select site --");

        // Original list of items
        ObservableList<String> items = FXCollections.observableArrayList(
                "site1", "site2", "site3", "site4", "site5", "site6", "site7", "site8"
        );

        siteComboBox = new ComboBox<>(items);
        //siteComboBox.setValue("site1");
        siteComboBox.setValue(Utilty.loadSelectedValue(propertyForSiteComboBox, "selectedsite"));
        siteComboBox.setEditable(true); // Set editable to allow text input
       // siteComboBox.setStyle("-fx-background-color: transparent;-fx-border-color: transparent;-fx-border-width: 0;" );

      
        vboxForSiteAndlabel.getChildren().addAll(siteLabel,siteComboBox);
       
       // vboxForSiteAndlabel.setStyle( "-fx-background-color: rgba(0, 0, 0, 0); -fx-border-width: 1; -fx-border-color: black; -fx-border-radius: 5;");

        TextField editor = siteComboBox.getEditor();
        editor.addEventHandler(KeyEvent.KEY_RELEASED, event -> {
            String input = editor.getText();
            System.out.println(input);
            if (input.isEmpty()) {
            	siteComboBox.setItems(items);
            } else {
                ObservableList<String> filteredItems = FXCollections.observableArrayList();
                for (String item : items) {
                    if (item.toLowerCase().contains(input.toLowerCase())) {
                        filteredItems.add(item);
                    }
                }
                siteComboBox.setItems(filteredItems);
               siteComboBox.show();
            }
        });
        siteComboBox.setOnAction(e->
        {
        	 Utilty.settingSaving(propertyForSiteComboBox, siteComboBox.getValue(), "selectedsite");   
        	   
        });
         

      //  root.getChildren().addAll(siteLabel,siteComboBox);
        
        submitButton=new Button("Submit");
       // submitButton.setAlignment(Pos.CENTER);
   
   submitButton.setPrefSize(124,25);
   submitButton.setStyle("-fx-background-color: #FFA500; -fx-text-fill: white;");
// root.getChildren().addAll(siteLabel,siteComboBox,submitButton);   
   vboxForsiteAndButton.getChildren().addAll(vboxForSiteAndlabel,submitButton);
   vboxForsiteAndButton.setAlignment(Pos.CENTER);
 /**
  * setting action for submit button
  */
 submitButton.setOnAction(e->{
	try {
		handleSubmit(stage,s1);
	} catch (IOException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
});
   
    	return  vboxForsiteAndButton;
    }
    
     /**
      * 
      * @param stage
      * @param username
      * @throws IOException
      * handling the submit if credential are correct
      */
    private void handleSubmit(Stage stage,String username) throws IOException
    {
    	
    	
    	 // Create a new Stage for the dashboard
        Stage dashboardStage = new Stage();
        // Create the dashboard instance
        Dashboard dashboard = new Dashboard();
        System.out.println(dashboard);
        // Open the dashboard with the new Stage
        dashboard.OpenDashBoard(dashboardStage, username);
      
        

        // Close the login stage
        stage.close();
    
    }
    

}
