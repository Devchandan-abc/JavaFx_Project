package com.autouploader;
import javafx.beans.property.SimpleObjectProperty;
import javafx.beans.property.SimpleStringProperty;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.*;
import javafx.scene.paint.Color;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.stage.Stage;
import javafx.util.converter.LocalDateStringConverter;

import javax.swing.text.DateFormatter;
import java.time.LocalDate;
import java.time.format.DateTimeFormatter;
import java.util.Date;
public class PatientsResult {
    private  StackPane dispalyPatientResultStackpane;
    private VBox patientResultVBox;
    public void displayPatientResult(Stage stage, BorderPane borderPane, String result, Pane fixedRectangleStackPane) {
         dispalyPatientResultStackpane=new StackPane();
        //dispalyPatientResultStackpane.setPickOnBounds(false);
         patientResultVBox=new VBox(20);

        patientResultVBox.setPadding(new Insets(35));
        patientResultVBox.setBorder(new Border(new BorderStroke(Color.LIGHTGRAY,BorderStrokeStyle.SOLID,new CornerRadii(5), new BorderWidths(.7))));
        VBox.setMargin(patientResultVBox,new Insets(10,0,0,15));
        HBox labelAndImage=new HBox(16 );
        Label label=new Label("Patients List");
label.setFont(Font.font("Arial", FontWeight.BOLD,20));
Image scrollingImage=new Image("file:/C:/Auto_Uplaoder/Refresh.png");
ImageView scrollingImageView=new ImageView(scrollingImage);
        // Create a Rectangle with orange background
        // Set the size for the circle
        double circleSize = 28.0;

        // Create a Circle with orange background
        Circle orangeBackground = new Circle(circleSize / 2, Color.ORANGE);

        // Create a StackPane and add the Rectangle and ImageView
        StackPane stackPane = new StackPane();
        stackPane.getChildren().addAll(orangeBackground, scrollingImageView);

        // Set action to the ImageView when clicked
        scrollingImageView.setOnMouseClicked(e -> {
            // Perform actions to refresh the page and load new data
            refreshTable();
        });

scrollingImageView.setFitWidth(16);
scrollingImageView.setFitHeight(16);
// adding label and imageview in hbox
labelAndImage.getChildren().addAll(label,stackPane);
Button searchThisWeekButton=new Button(" This Week");
searchThisWeekButton.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");
Button searchThisMonthButton=new Button("This Month");
searchThisMonthButton.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");
Button searchLast3MonthButton =new Button("Last 3 Month");
searchLast3MonthButton.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");
Button searchAllTimeButton=new Button("All time");

searchAllTimeButton.setStyle("-fx-background-color: transparent; -fx-border-color: transparent;");
HBox hbox=new HBox(10);
hbox.setSpacing(12);
        Image searchImageTextBox=new Image("file:/C:/Auto_Uplaoder/search.png");
        ImageView searchImageView=new ImageView(searchImageTextBox);
        searchImageView.setFitWidth(34);
        searchImageView.setFitHeight(12);
TextField searchTextField =new TextField();
searchTextField.setPromptText("Search");
searchTextField.setDisable(false);
searchTextField.setPrefSize(300,20);
hbox.getChildren().addAll(searchTextField, searchImageView);
HBox patintsHeader=new HBox(30);
//patintsHeader.setPadding(new Insets(15,0,0,20));
patintsHeader.getChildren().addAll(labelAndImage, searchThisWeekButton,searchThisMonthButton,searchLast3MonthButton,searchAllTimeButton,searchTextField);
TableView<Patient> patientTableTableView=createPatientResult();


patientResultVBox.getChildren().addAll(patintsHeader,patientTableTableView);
dispalyPatientResultStackpane.getChildren().add(patientResultVBox);
        StackPane.setMargin(patientResultVBox, new Insets(10, 0, 0, 15));

fixedRectangleStackPane.getChildren().clear();
fixedRectangleStackPane.getChildren().add(dispalyPatientResultStackpane);

    }

    public TableView<Patient> createPatientResult() {
        // Create a DateTimeFormatter for formatting the LocalDate
        DateTimeFormatter dateFormatter = DateTimeFormatter.ofPattern("MM-dd-yy");

        TableView<Patient> patientTableview = new TableView<>();

        // Make the table background transparent
        patientTableview.setStyle("-fx-background-color: transparent;");

       // patientTableview.setStyle();
      //  patientTableview.setEditable(false);
        TableColumn<Patient, String> namePatientColumn = new TableColumn<>("Name                  ");

        //namePatientColumn.setStyle(String.valueOf(Pos.TOP_LEFT));
        //namePatientColumn.setStyle("-fx-table-header-border: none;" + " -fx-alignment: CENTER-LEFT;");
        TableColumn<Patient, Integer> caseIdColumn = new TableColumn<>("Case     Id            ");
       // namePatientColumn.setStyle("-fx-alignment: CENTER-LEFT;");
        // Make the column headers transparent
        namePatientColumn.setStyle("-fx-background-color: transparent;");
        caseIdColumn.setStyle("-fx-background-color: transparent;");


        TableColumn<Patient, Integer> mrnColumn = new TableColumn<>("MRN                     ");
        TableColumn<Patient, String> uploadStatusColumn = new TableColumn<>("Upload Status    ");
        TableColumn<Patient, String> caseStatusColumn = new TableColumn<>("Case  Status      ");
        TableColumn<Patient, LocalDate> dateTableColum = new TableColumn<>("Date Created     ");
        TableColumn<Patient, String> uploadedBy = new TableColumn<>("Uploaded   By    ");
        TableColumn<Patient, ImageView> imageContaingEditableImage = new TableColumn<>("a");
        imageContaingEditableImage.setText(""); // Set the column header text to an empty string
        //imageContaingEditableImage.setGraphic(null); // Set the column header graphic to null
        // Set the background color of the table columns to white
//        namePatientColumn.setStyle("-fx-background-color: white;");
//        caseIdColumn.setStyle("-fx-background-color: white;");
//        mrnColumn.setStyle("-fx-background-color: white;");
//        uploadStatusColumn.setStyle("-fx-background-color: white;");
//        caseStatusColumn.setStyle("-fx-background-color: white;");
//        dateTableColum.setStyle("-fx-background-color: white;");
//        uploadedBy.setStyle("-fx-background-color: white;");
//        imageContaingEditableImage.setStyle("-fx-background-color: white;");

        // Set cell value factories
        namePatientColumn.setCellValueFactory(data -> new SimpleStringProperty(data.getValue().getName()));
        caseIdColumn.setCellValueFactory(data -> new SimpleObjectProperty<>(data.getValue().getCaseId()));
        mrnColumn.setCellValueFactory(data -> new SimpleObjectProperty<>(data.getValue().getMrn()));
        uploadStatusColumn.setCellValueFactory(data -> new SimpleStringProperty(data.getValue().getUploadStatus()));
        caseStatusColumn.setCellValueFactory(data -> new SimpleStringProperty(data.getValue().getCaseStatus()));
        dateTableColum.setCellValueFactory(data -> new SimpleObjectProperty<>((data.getValue().getDateCreated())));
        uploadedBy.setCellValueFactory(data -> new SimpleStringProperty((data.getValue().getUploadedBy())));

        //(dateFormatter.format(data.getValue().getDateCreated()))
        imageContaingEditableImage.setCellValueFactory(data -> new SimpleObjectProperty<>(data.getValue().getImageView()));

        // Add the columns to the TableView
        patientTableview.getColumns().addAll(namePatientColumn, caseIdColumn, mrnColumn, uploadStatusColumn, caseStatusColumn, dateTableColum, uploadedBy, imageContaingEditableImage);

        Image image1 = new Image("file:/C:/Auto_Uplaoder/Help.png");
        ImageView imageView1 = new ImageView(image1);
        imageView1.setFitHeight(15);
        imageView1.setFitWidth(15);

        Image image2 = new Image("file:/C:/Auto_Uplaoder/Help.png");
        ImageView imageView2 = new ImageView(image2);
        imageView2.setFitHeight(15);
        imageView2.setFitWidth(15);
        ObservableList<Patient> patientData = FXCollections.observableArrayList(
                new Patient("Raju", 1323, 23553, "not uploaded", "reviewed", LocalDate.now(), "Raju", imageView1),new Patient("Dev", 13233, 233, "uploaded", "reviewed", LocalDate.now(), "Raju", imageView2));


        // Set the column resize policy to constrained
        patientTableview.setColumnResizePolicy(TableView.CONSTRAINED_RESIZE_POLICY);

        patientTableview.setItems(patientData);

        return patientTableview;
    }

    /**
     * Method for refreshing the dispalyresultstackpane for refresing the table view
     */
    private void refreshTable() {
        // Placeholder method for refreshing the page
        System.out.println("Table got reloaded");

        // Update the displayPatientResultStackpane with the modified patientResultVBox
        dispalyPatientResultStackpane.getChildren().clear();
        TableView<Patient> patientTable = createPatientResult();
        // Replace the existing TableView with the new one,replcing the patientTablenode view with the existing one
        patientResultVBox.getChildren().set(1, patientTable);
        dispalyPatientResultStackpane.getChildren().add(patientResultVBox);
    }


}

