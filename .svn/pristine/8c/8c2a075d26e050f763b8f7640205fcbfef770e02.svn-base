package com.autouploader;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.layout.*;
import javafx.stage.Stage;
import javafx.stage.StageStyle;
import javafx.scene.control.ComboBox;
import javafx.scene.control.Label;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.StackPane;
public class AddNewPatient {

    public void handleAddPatient(Stage stage, BorderPane borderPane, String result, Pane fixedRectangleStackPane) {
        Dialog<Void> addPatientDialog = new Dialog<>();
        addPatientDialog.initStyle(StageStyle.UNDECORATED); // Remove the default close button and dialog ico
        // Set up the content of the dialog
       // Add padding to the full dialog
        // Create a translucent background overlay
       // addTranslucentBackground(stage, addPatientDialog);

        double padding = 100; // Adjust the padding as needed
        addPatientDialog.getDialogPane().setPadding(new Insets(100,0,0,0));
        DialogPane dialogPane = new DialogPane();
        dialogPane.setPrefSize(470, 550); // Set preferred dimensions
        dialogPane.setStyle("-fx-background-color: white; -fx-border-radius: 10; -fx-border-color: black; -fx-border-width: 2;");
        dialogPane.setContent(createPatientForm());
        addPatientDialog.setDialogPane(dialogPane);
        addPatientDialog.showAndWait();
    }

//    private void addTranslucentBackground(Window owner, Dialog<Void> dialog) {
//        // Create a transparent overlay stage
//        Stage overlayStage = new Stage(StageStyle.TRANSPARENT);
//        overlayStage.initOwner(owner);
//
//        // Set up the overlay with a translucent background
//        Pane overlayPane = new Pane();
//        overlayPane.setStyle("-fx-background-color: rgba(0, 0, 0, 0.3);"); // Adjust alpha value as needed
//        Scene overlayScene = new Scene(overlayPane);
//        overlayStage.setScene(overlayScene);
//
//        // Add a listener to close the dialog when the overlay is clicked
//        overlayPane.setOnMouseClicked(event -> {
//            dialog.setResult(null);
//            dialog.close();
//        });
//
//        // Show the overlay stage
//        overlayStage.show();
//    }

    private VBox createPatientForm() {
     VBox vboxForAddPatient=new VBox(10);
      //  vboxForAddPatient.setStyle("-fx-background-color: white; -fx-border-radius: 10; -fx-border-color: black; -fx-border-width: 1;");
        HBox labelAndCrossHbox=createHeaderHBox();

        // Create a GridPane for the form
        GridPane gridPane = new GridPane();
        gridPane.setHgap(5);
        gridPane.setVgap(3);
        Label headingLabel=new Label("Create a new patient case");
        Label nameLabel = new Label("NAME"); // Label without asterisk
        // Create ColumnConstraints to set the width for columns
//        ColumnConstraints col0 = new ColumnConstraints();
//        ColumnConstraints col1 = new ColumnConstraints();
//        ColumnConstraints col2 = new ColumnConstraints();
//        ColumnConstraints col3 = new ColumnConstraints();
//
//        col0.setPercentWidth(15);
//        col1.setPercentWidth(35); // Adjust the percentage as needed
//        col2.setPercentWidth(15); // Adjust the percentage as needed
//        col3.setPercentWidth(35); // Adjust the percentage as needed
//        gridPane.getColumnConstraints().addAll(col0,col1, col2, col3);

// Add an asterisk in red color
        Label asteriskLabel = new Label("*");
        asteriskLabel.setStyle("-fx-text-fill: red;");

        HBox nameHBox = new HBox(1);
        nameHBox.getChildren().addAll(nameLabel, asteriskLabel);

        TextField nameTextField = new TextField();
        nameTextField.setPromptText("type here");
        HBox hboxForNameAndTextBox=new HBox(5);
        hboxForNameAndTextBox.getChildren().addAll(nameHBox,nameTextField);
        nameTextField.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
        gridPane.add(hboxForNameAndTextBox, 0, 0); // Use the HBox containing nameLabel and asteriskLabel
        Label genderLabel = new Label("GENDER");
        Label asteriskLabel1 = new Label("*");
        asteriskLabel1.setStyle("-fx-text-fill: red;");

        HBox hboxforGenderLabelAndAstricksymbol = new HBox(1);

        ComboBox<String> genderComboBox = new ComboBox<>();
        genderComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
        genderComboBox.setPromptText("select one");
        genderComboBox.getItems().addAll("Male", "Female");
        genderComboBox.setDisable(false);
        genderComboBox.setPrefWidth(150); // Adjust the width as needed

        genderComboBox.requestFocus();
        HBox hboxForGenderAndComboBox=new HBox(5);
        hboxForGenderAndComboBox.getChildren().addAll(hboxforGenderLabelAndAstricksymbol,genderComboBox);
        genderComboBox.setOnAction(event -> {
            System.out.println("Selected: " + genderComboBox.getValue());
        });

        hboxforGenderLabelAndAstricksymbol.getChildren().addAll(genderLabel, asteriskLabel1);
        HBox hboxFormrnLabelandAstrick=new HBox(5);
        Label asteriskLabel2 = new Label("*");
        asteriskLabel2.setStyle("-fx-text-fill: red;");
        Label mrnLabel=new Label("MRN");
        hboxFormrnLabelandAstrick.getChildren().addAll(mrnLabel,asteriskLabel2);
        TextField mrnTextField=new TextField();
        mrnTextField.setPromptText("type here");
        mrnTextField.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
        HBox hboxForMrnLabelAndTextBox=new HBox(5);
        hboxForMrnLabelAndTextBox.getChildren().addAll(hboxFormrnLabelandAstrick,mrnTextField);
        gridPane.add(hboxForMrnLabelAndTextBox,0,1);
        HBox hboxForEthinicityandComboBox=new HBox(5);
        Label ethinicityLabel=new Label("ETHINCITY");
        ComboBox<String> ethinictyComboBox=new ComboBox<>();
        ethinictyComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
        ethinictyComboBox.setPromptText("select one");
        ethinictyComboBox.setPrefWidth(150);
        ethinictyComboBox.getItems().addAll("racial","fair");
        hboxForEthinicityandComboBox.getChildren().addAll(ethinicityLabel,ethinictyComboBox);
        gridPane.add(hboxForEthinicityandComboBox,1,1);
        gridPane.add(hboxForGenderAndComboBox,1,0);

        HBox hboxForDobLabelandDatePicker = new HBox(10);
        Label dobLabel=new Label("DOB:");
        // Add DOB Label and DatePicker
        TextField dobTextField=new TextField();
        dobTextField.setPromptText("mm-dd-yyyy");

        dobTextField.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
        hboxForDobLabelandDatePicker.getChildren().addAll(dobLabel,dobTextField);

//        gridPane.add(dobDatePicker,1,2);
        gridPane.add(hboxForDobLabelandDatePicker,0,2);

        StackPane pupilDilationStackPane = new StackPane();
        Label pupilDilationLabel = new Label("Pupil Dilation");

        ComboBox<String> pupilDilationComboBox = new ComboBox<>();
        pupilDilationComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        pupilDilationComboBox.getItems().addAll("A", "B");
        pupilDilationComboBox.setPromptText("Select");
        pupilDilationComboBox.setPrefSize(240, 45);
        pupilDilationComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
HBox hboxForPupilDialationLabelandAtrick=new HBox(3);
hboxForPupilDialationLabelandAtrick.setPadding(new Insets(0,0,0,7));
        Label asteriskLabel3 = new Label("*");
        asteriskLabel3.setStyle("-fx-text-fill: red;");
        hboxForPupilDialationLabelandAtrick.getChildren().addAll(pupilDilationLabel,asteriskLabel3);
pupilDilationComboBox.requestFocus();
// Create a Label to display the selected item
        Label selectedTextLabel = new Label();
// Add a listener to update the label when an item is selected
        pupilDilationComboBox.setOnAction(event -> {
            String selectedText = pupilDilationComboBox.getValue();
            selectedTextLabel.setText(selectedText);
        });

        pupilDilationStackPane.getChildren().addAll(pupilDilationComboBox,hboxForPupilDialationLabelandAtrick);
        gridPane.add(pupilDilationStackPane, 0, 3);
        // Create a StackPane to overlay the TextField and Label
      StackPane haemoglobinStackPane = new StackPane();

// Create a Label for "Haemoglobin"
      Label haemoglobinLabel = new Label("Haemoglobin");
      haemoglobinLabel.setPadding(new Insets(0,0,0,7));

     // Create a TextField with a placeholder text
        TextField haemoglobinTextField = new TextField();
        haemoglobinTextField.setPromptText("Type here");
        haemoglobinTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        haemoglobinStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        haemoglobinStackPane.getChildren().addAll(haemoglobinTextField, haemoglobinLabel);

// Add the StackPane to the GridPane
        gridPane.add(haemoglobinStackPane, 1, 3);
        haemoglobinTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");

        StackPane lastEyeExamStackPane = new StackPane();
        Label lastEyeExamLabel = new Label("Last Eye Exam ");

        ComboBox<String> lastEyeExamComboBox = new ComboBox<>();
        lastEyeExamComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        lastEyeExamComboBox.getItems().addAll("A", "B");
        lastEyeExamComboBox.setPromptText("Select");
        lastEyeExamComboBox.setPrefSize(240, 45);
        lastEyeExamComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
        HBox hboxForPupilDialationLabelandAtrick5=new HBox(3);
        hboxForPupilDialationLabelandAtrick.setPadding(new Insets(0,0,0,7));
        Label asteriskLabel4 = new Label("*");
        asteriskLabel4.setStyle("-fx-text-fill: red;");
        hboxForPupilDialationLabelandAtrick5.getChildren().addAll(lastEyeExamLabel,asteriskLabel4);
        lastEyeExamComboBox.requestFocus();
// Create a Label to display the selected item
        Label selectedTextForLastEye = new Label("Select");
// Add a listener to update the label when an item is selected
        pupilDilationComboBox.setOnAction(event -> {
            String selectedText = pupilDilationComboBox.getValue();
            selectedTextForLastEye.setText(selectedText);
        });

        lastEyeExamStackPane.getChildren().addAll(lastEyeExamComboBox, hboxForPupilDialationLabelandAtrick5);

        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(lastEyeExamStackPane, 0, 4);

        ///// for USUAL BLOOD SUGAR LEVEL
        // Create a StackPane to overlay the TextField and Label
        StackPane usualBloodSugarLevelStackPane= new StackPane();

// Create a Label for "Haemoglobin"
        Label usualBloodSugarLevelLAbel = new Label("USUAL BLOOD SUGAR LEVEL");
        usualBloodSugarLevelLAbel.setPadding(new Insets(0,0,0,7));

// Create a TextField with a placeholder text
        TextField usualBloodSugarLevelTextField = new TextField();
        usualBloodSugarLevelTextField.setPromptText("Type here");
        //  usualBloodSugarLevelTextField.setPrefWidth(45);
        usualBloodSugarLevelTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        usualBloodSugarLevelStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        usualBloodSugarLevelStackPane.getChildren().addAll(usualBloodSugarLevelTextField, usualBloodSugarLevelLAbel);

// Add the StackPane to the GridPane
        //  GridPane.setColumnSpan(haemoglobinStackPane, 2);
        gridPane.add(usualBloodSugarLevelStackPane, 1, 4);
        usualBloodSugarLevelTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");
//// YEARS WITH DIABATES

        StackPane yearWithDiabatesStackPane = new StackPane();
        Label yearWithDiabatesLabel = new Label("YEAR WITH DIABATES");

        ComboBox<String> yearWithDiabatesComboBox = new ComboBox<>();
        yearWithDiabatesComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        yearWithDiabatesComboBox.getItems().addAll("A", "B");
        yearWithDiabatesComboBox.setPromptText("Select");
        yearWithDiabatesComboBox.setPrefSize(240, 45);
        yearWithDiabatesComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
        HBox hboxForYearWithDIABTESAndAstrick=new HBox(2);
        hboxForPupilDialationLabelandAtrick.setPadding(new Insets(0,0,0,7));
        Label asteriskLabelForYearOfDaiabates = new Label("*");
        asteriskLabelForYearOfDaiabates.setStyle("-fx-text-fill: red;");
        hboxForYearWithDIABTESAndAstrick.getChildren().addAll(yearWithDiabatesLabel,asteriskLabelForYearOfDaiabates);
        yearWithDiabatesComboBox.requestFocus();
// Create a Label to display the selected item
        Label selectedTextLabelForYearOfDiabates = new Label();
// Add a listener to update the label when an item is selected
        yearWithDiabatesComboBox.setOnAction(event -> {
            String selectedText = yearWithDiabatesComboBox.getValue();
            selectedTextLabelForYearOfDiabates.setText(selectedText);
        });

        yearWithDiabatesStackPane.getChildren().addAll(yearWithDiabatesComboBox, hboxForYearWithDIABTESAndAstrick);

        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(yearWithDiabatesStackPane, 0, 5);

///// CHOLESTORAL

        // Create a StackPane to overlay the TextField and Label
        StackPane chloaestralStackPane= new StackPane();

// Create a Label for "Haemoglobin"
        Label cholestaorolLabel = new Label("CHOLOLESTROL");
        cholestaorolLabel.setPadding(new Insets(0,0,0,7));

// Create a TextField with a placeholder text
        TextField cholestorolTextField = new TextField();
        cholestorolTextField.setPromptText("Type here");
        //  cholestorolTextField.setPrefWidth(45);
        cholestorolTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        chloaestralStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        chloaestralStackPane.getChildren().addAll(cholestorolTextField, cholestaorolLabel);

// Add the StackPane to the GridPane

        gridPane.add(chloaestralStackPane, 1, 5);
        cholestorolTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");

 //// TRIGY LABEL
        // Create a StackPane to overlay the TextField and Label
        StackPane triglyStackPane= new StackPane();

// Create a Label for "Haemoglobin"
        Label trigyLabel = new Label("TRIGLYCERIDES");
        trigyLabel.setPadding(new Insets(0,0,0,7));

// Create a TextField with a placeholder text
        TextField trigyTextField = new TextField();
        trigyTextField.setPromptText("Type here");
        //  trigyTextField.setPrefWidth(45);
        trigyTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        triglyStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        triglyStackPane.getChildren().addAll(trigyTextField, trigyLabel);

// Add the StackPane to the GridPane

        gridPane.add(triglyStackPane, 1, 6);
        trigyTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");

//////////////MEDICATION

        // Create a StackPane to overlay the TextField and Label
        StackPane medicationStackPane= new StackPane();

// Create a Label for "Haemoglobin"
        Label medicationLabel = new Label(" MEDICATION");
        medicationLabel.setPadding(new Insets(0,0,0,7));

// Create a TextField with a placeholder text
        TextField medicationTextField = new TextField();
        medicationTextField.setPromptText("Type here");
        //  medicationTextField.setPrefWidth(45);
        medicationTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        medicationStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        medicationStackPane.getChildren().addAll(medicationTextField, medicationLabel);

// Add the StackPane to the GridPane

        gridPane.add(medicationStackPane, 1, 7);

        medicationTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");
///////////////VISUAL AQUITY


        // Create a StackPane to overlay the TextArea and Label
        StackPane visualAquatyStackpane = new StackPane();

// Create a Label for "Medication"
        Label visualAquityLabel = new Label("VISUAL AQUITY");

       visualAquityLabel.setPadding(new Insets(0, 0, 0, 7));

// Create a TextArea
        TextArea medicationTextArea = new TextArea();
        medicationTextArea.setPromptText("Type here");

        //Set padding to move the "Type here" text down
        medicationTextArea.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-padding: 5 0 0 5; -fx-line-spacing: 40;");
       // medicationTextArea.setPrefRowCount(8);  // Set the number of rows as needed
        medicationTextArea.setWrapText(true);  // Enable text wrapping
        medicationTextArea.setPrefSize(240,40);  // Set the preferred size as needed

// Set the alignment for the StackPane
       visualAquatyStackpane.setAlignment(Pos.TOP_LEFT);

// Add the TextArea and Label to the StackPane
        visualAquatyStackpane.getChildren().addAll(medicationTextArea,visualAquityLabel);

// Add the StackPane to the GridPane
      //  GridPane.setRowSpan(medicationTextArea,2);
        // Add the StackPane to the GridPane
        gridPane.add(visualAquatyStackpane, 1, 8);
        GridPane.setRowSpan(visualAquatyStackpane, 2);  // Span two rows in column 1

        medicationTextArea.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1;");

        //// GLAUCOMA HISTORY

        StackPane glaucomaHistoryStackPane = new StackPane();
        Label glaucomaHistoryLabel = new Label("GLAUCOMA HISTORY");

        ComboBox<String> glaucomaHistoryComboBox = new ComboBox<>();
        glaucomaHistoryComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        glaucomaHistoryComboBox.getItems().addAll("A", "B");
        glaucomaHistoryComboBox.setPromptText("Select");
        glaucomaHistoryComboBox.setPrefSize(240, 45);
        glaucomaHistoryComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
        HBox hboxForGlaucomaHistoryAndAstrick=new HBox(1);
        hboxForPupilDialationLabelandAtrick.setPadding(new Insets(0,0,0,7));
        Label astrickForGlaucomaHistory = new Label("*");
        astrickForGlaucomaHistory.setStyle("-fx-text-fill: red;");
        hboxForGlaucomaHistoryAndAstrick.getChildren().addAll(glaucomaHistoryLabel,astrickForGlaucomaHistory);
        glaucomaHistoryComboBox.requestFocus();


        glaucomaHistoryStackPane.getChildren().addAll(glaucomaHistoryComboBox, hboxForGlaucomaHistoryAndAstrick);

        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(glaucomaHistoryStackPane, 0, 6);



        ///////////HYPERTENSION
        StackPane hypertensionStackPane = new StackPane();
        Label hyperTensionLabel = new Label("HYPERTENSION");

        ComboBox<String> hyperTensionComboBox = new ComboBox<>();
        hyperTensionComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        hyperTensionComboBox.getItems().addAll("A", "B");
        hyperTensionComboBox.setPromptText("Select");
        hyperTensionComboBox.setPrefSize(240, 45);
        hyperTensionComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
      // HBox hboxForHyperTension=new HBox(1);
       // hboxForHyperTension.setPadding(new Insets(0,0,0,7));
        //Label astrickForGlaucomaHistory = new Label("*");
        //astrickForGlaucomaHistory.setStyle("-fx-text-fill: red;");
       // hboxForHyperTension.getChildren().addAll(hyperTensionLabel);
        hyperTensionComboBox.requestFocus();
        hypertensionStackPane.getChildren().addAll(hyperTensionComboBox, hyperTensionLabel);
        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(hypertensionStackPane, 0, 7);

//// SUBJECTIVE DIABATIC CONTROL
        StackPane subjectiveDiabaticControlStackPane = new StackPane();
        Label subjectiveDiabaticControl = new Label("SUBJECTIVE DIABATIC CONTROL");

        ComboBox<String> subjectiveDiabticControlComboBox = new ComboBox<>();
        subjectiveDiabticControlComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        subjectiveDiabticControlComboBox.getItems().addAll("A", "B");
        subjectiveDiabticControlComboBox.setPromptText("Select");
        subjectiveDiabticControlComboBox.setPrefSize(240, 45);
        subjectiveDiabticControlComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
        HBox hboxForHyperTension=new HBox(1);
        hboxForHyperTension.setPadding(new Insets(0,0,0,7));
        //Label astrickForGlaucomaHistory = new Label("*");
        astrickForGlaucomaHistory.setStyle("-fx-text-fill: red;");
        hboxForHyperTension.getChildren().add(subjectiveDiabaticControl);
        subjectiveDiabticControlComboBox.requestFocus();


        subjectiveDiabaticControlStackPane.getChildren().addAll(subjectiveDiabticControlComboBox, hboxForHyperTension);

        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(subjectiveDiabaticControlStackPane, 0, 8);

        //////////MOST RECENT BLOOD TEST
        StackPane mostRecentBolldTestStackPane = new StackPane();
        Label mostRecentBloodTestLabel = new Label("MOST RECENT BLOOD TEST");

        ComboBox<String> mostRecentBloodTestComboBox = new ComboBox<>();
        mostRecentBloodTestComboBox.setStyle("-fx-background-color: transparent; -fx-border-width: 0 0 1 0; -fx-border-color: black;");
// Add items to the ComboBox
        mostRecentBloodTestComboBox.getItems().addAll("A", "B");
        mostRecentBloodTestComboBox.setPromptText("Select");
        mostRecentBloodTestComboBox.setPrefSize(240, 45);
        mostRecentBloodTestComboBox.setStyle("-fx-background-color: white; -fx-border-color: black; -fx-border-radius: 5; -fx-border-width: 1; -fx-text-fill: black;");
        HBox hboxForMostRecentBloodTest=new HBox(1);
        hboxForMostRecentBloodTest.setPadding(new Insets(0,0,0,7));
        //Label astrickForGlaucomaHistory = new Label("*");
        astrickForGlaucomaHistory.setStyle("-fx-text-fill: red;");
        hboxForMostRecentBloodTest.getChildren().addAll(mostRecentBloodTestLabel);
        mostRecentBloodTestComboBox.requestFocus();


        mostRecentBolldTestStackPane.getChildren().addAll(mostRecentBloodTestComboBox,hboxForMostRecentBloodTest);

        //GridPane.setColumnSpan(pupilDilationStackPane, 2);
        gridPane.add(mostRecentBolldTestStackPane, 0, 9);
        //////OTHER HISTORY OR INFORMATION
        // Create a StackPane to overlay the TextField and Label
        StackPane otherInformationStackPane= new StackPane();

// Create a Label for "Haemoglobin"
        Label otherInformationLabel = new Label("Other  history Or Information");
        otherInformationLabel.setPadding(new Insets(0,0,0,7));

// Create a TextField with a placeholder text
        TextField otherHistoryTextField = new TextField();
        otherHistoryTextField.setPromptText("Type here");
        //  otherHistoryTextField.setPrefWidth(45);
        otherHistoryTextField.setPrefSize(165, 45);


// Set the alignment for the StackPane
        otherInformationStackPane.setAlignment(Pos.TOP_LEFT);

// Add the TextField and Label to the StackPane
        otherInformationStackPane.getChildren().addAll(otherHistoryTextField, otherInformationLabel);

// Add the StackPane to the GridPane


        gridPane.add(otherInformationStackPane, 0, 10);
        // Set the column span for the TextField
        GridPane.setColumnSpan(otherInformationStackPane, 2);
        otherHistoryTextField.setStyle("-fx-background-color:white;-fx-border-color:black;-fx-border-radius:5;-fx-border-width:1;");
/////BUTTON UPLOAD IMAGE LATER AND UPLAOD IMAGE NOW
        Button uploadImagelater=new Button("UPLOAD IMAGES LATER");
        uploadImagelater.setStyle(
                "-fx-background-color: transparent; " +  // Set the background color to transparent
                        "-fx-border-color: orange; " +  // Set the border color to orange
                        "-fx-text-fill: orange; " +  // Set the text color to orange
                        "-fx-font-weight: bold; " +  // Set the font weight to bold
                        "-fx-border-radius: 5;"  // Set the border radius (adjust the value as needed)
        );
        uploadImagelater.setPrefWidth(240);
        gridPane.add(uploadImagelater,0,11);


        Button uploadImageNow=new Button("UPLOAD IMAGES NOW");
        uploadImageNow.setStyle(
                "-fx-background-color: orange; " +  // Set the background color to orange
                        "-fx-text-fill: white; " +  // Set the text color to white
                        "-fx-font-weight: bold; " +  // Set the font weight to bold
                        "-fx-border-radius: 5;"  // Set the border radius (adjust the value as needed)
        );
        uploadImageNow.setPrefWidth(240);
        gridPane.add(uploadImageNow,1,11);


        vboxForAddPatient.getChildren().addAll(labelAndCrossHbox,gridPane);
      // vboxForAddPatient.setPadding(new Insets(100,0,0,40));
        return vboxForAddPatient;
    }

    private HBox createHeaderHBox() {
        HBox headerHBox = new HBox(200);
        headerHBox.setPadding(new Insets(5,0,0,2));
        // Create a label for the custom dialog layout
        Label addPatientLabel = new Label("Create a new patient case");
        addPatientLabel.setStyle("-fx-font-weight: bold; -fx-text-fill: black; -fx-font-size: 12;");

        // Create a close button with a cross symbol
        Button closeButton = new Button("✖");
        closeButton.setOnAction(event -> ((Stage) closeButton.getScene().getWindow()).close());

        // Add components to the HBox
        headerHBox.getChildren().addAll(addPatientLabel, closeButton);
        return headerHBox;
    }

}




